DELIMITER $$

DROP PROCEDURE IF EXISTS `sp_etl_order_fact` $$
CREATE DEFINER=`root`@`%` PROCEDURE `sp_etl_order_fact`(
  IN loc_username VARCHAR(255)
)
BEGIN
-- Description: Query will get all phones and accessories, their total cost and items sold per day.
-- Appending Order_fact table data
INSERT INTO starSchema.ORDERS
(CalenderKey, ProductTypeKey, DollarsSold, UnitsSold)
-- Phones
SELECT ss_c.CalanderKey, ss_p.ProductKey, sum(p.ProductCost), count(p.ProductCost)
FROM codeblooded.OrderItem oi, codeblooded.Products p, codeblooded.Phones ph, 
starSchema.Calander ss_c,starSchema.Products ss_p
where oi.ProductId=p.ProductId
and p.ProductType=1
and ph.PhoneId=p.ProductId
and ss_c.FullDate=oi.ODate
and oi.ODate between 
(select max(FullDate) from starSchema.ORDERS of, starSchema.Calander c 
where of.CalanderKey=c.CalanderKey) 
and curdate()
group by ss_c.CalanderKey, ss_p.ProductKey

Union all
-- Accessories
SELECT ss_c.CalanderKey, ss_p.ProductKey, sum(p.ProductCost), count(p.ProductCost)
FROM codeblooded.OrderItem oi, codeblooded.Products p, codeblooded.Phones ph, 
starSchema.Calander ss_c,starSchema.Products ss_p
where oi.ProductId=p.ProductId
and p.ProductType=2
and ph.PhoneId=p.ProductId
and ss_c.FullDate=oi.ODate
and oi.ODate between 
(select max(FullDate) from starSchema.ORDERS of, starSchema.Calander c 
where of.CalanderKey=c.CalanderKey) 
and curdate()
group by ss_c.CalanderKey, ss_p.ProductKey;

END $$

DELIMITER ;





DELIMITER $$

DROP PROCEDURE IF EXISTS `sp_etl_inventory_fact` $$
CREATE DEFINER=`root`@`%` PROCEDURE `sp_etl_inventory_fact`(
  IN loc_username VARCHAR(255)
)
BEGIN
-- Description: Query will get all phones and accessories, their total cost and items sold per day.
-- Appending Order_fact table data
INSERT INTO starSchema.Inventory 
(CalenderKey, ProductKey, StoreKey, Quantity)
-- Phones
SELECT ss_c.CalanderKey, ss_p.ProductKey, ss_s.StoreKey, sum(i.Quantity)
FROM codeblooded.Inventory i, codeblooded.Products p, codeblooded.Phones ph, 
starSchema.Calander ss_c,starSchema.Products ss_p, starSchema.Stores ss_s
where i.ProductId=p.ProductId
and p.ProductType=1
and ph.PhoneId=p.ProductId
and ss_c.FullDate=i.InventoryDate
and i.InventoryDate between
(select max(FullDate) from starSchema.INVENTORY of, starSchema.Calander c 
where of.CalanderKey=c.CalanderKey) 
and curdate()
group by ss_c.CalanderKey, ss_p.ProductKey, ss_s.StoreKey

UNION ALL
-- Accessories
SELECT ss_c.CalanderKey, ss_p.ProductKey, ss_s.StoreKey, sum(i.Quantity)
FROM codeblooded.Inventory i, codeblooded.Products p, codeblooded.Phones ph, 
starSchema.Calander ss_c,starSchema.Products ss_p, starSchema.Stores ss_s
where i.ProductId=p.ProductId
and p.ProductType=2
and ph.PhoneId=p.ProductId
and ss_c.FullDate=i.InventoryDate
and i.InventoryDate between
(select max(FullDate) from starSchema.INVENTORY of, starSchema.Calander c 
where of.CalanderKey=c.CalanderKey) 
and curdate()
group by ss_c.CalanderKey, ss_p.ProductKey, ss_s.StoreKey;

END $$

DELIMITER ;





DELIMITER $$

DROP PROCEDURE IF EXISTS `sp_etl_defects_fact` $$
CREATE DEFINER=`root`@`%` PROCEDURE `sp_etl_defects_fact`(
  IN loc_username VARCHAR(255)
)
BEGIN
-- Description: Query will get all phones and accessories, their total cost and items sold per day.
-- Appending Order_fact table data
INSERT INTO starSchema.DEFECTS 
(CalenderKey, ProductKey, StoreKey, Quantity)
-- Phones
SELECT ss_c.CalanderKey, ss_p.ProductKey, ss_s.StoreKey, sum(d.NoOfItems)
FROM codeblooded.DefectsFound d, codeblooded.Products p, codeblooded.Phones ph, 
starSchema.Calander ss_c,starSchema.Products ss_p, starSchema.Stores ss_s
where d.ProductId=p.ProductId
and p.ProductType=1
and ph.PhoneId=p.ProductId
and ss_c.FullDate=d.DFDate
and d.DFDate between
(select max(FullDate) from starSchema.DEFECTS of, starSchema.Calander c 
where of.CalanderKey=c.CalanderKey) 
and curdate()
group by ss_c.CalanderKey, ss_p.ProductKey, ss_s.StoreKey

UNION ALL
-- Accessories
SELECT ss_c.CalanderKey, ss_p.ProductKey, ss_s.StoreKey, sum(d.NoOfItems)
FROM codeblooded.DefectsFound d, codeblooded.Products p, codeblooded.Phones ph, 
starSchema.Calander ss_c,starSchema.Products ss_p, starSchema.Stores ss_s
where d.ProductId=p.ProductId
and p.ProductType=2
and ph.PhoneId=p.ProductId
and ss_c.FullDate=d.DFDate
and d.DFDate between
(select max(FullDate) from starSchema.DEFECTS of, starSchema.Calander c 
where of.CalanderKey=c.CalanderKey) 
and curdate()
group by ss_c.CalanderKey, ss_p.ProductKey, ss_s.StoreKey;

END $$

DELIMITER ;





